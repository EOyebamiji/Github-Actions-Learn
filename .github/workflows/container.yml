name: Docker Container

on: push

jobs:

  Docker-steps:
    runs-on: ubuntu-latest
    container:
      image: node:18-alpine3.15
    steps:
      - name: Log Node Version
        run: node -v

      - name: Step with docker
        uses: docker://node:16-alpine
        with:
          entrypoint: /bin/echo
          args: 'Hello World, Welcome to my docker integration with GitHub Actions'

      - uses: actions/checkout@v1

      - name: Run a custom executable script
        uses: docker://node:16-alpine
        with:
          entrypoint: ./script.sh #make script executable Chmod +x script.sh
          args: "Successful script"

      - name: Log New Node Version
        uses: docker://node:16-alpine
        with:
          entrypoint: /usr/local/bin/node
          args: -v
      
      #This step is useful in real life projects where you'd love to get slack notifications for every push
      - name: Send Slack Message
        uses: docker://technosophos/slack-notify
        env:
        # Ensure Slack Webhook is encrypted using secrets
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Hello Team, Welcome to DevOps"


  node-docker:
    runs-on: ubuntu-latest
    services:
      app:
        image: alialaa17/node-api
        ports:
          - 3001:3000
      mongo:
        image: mongo
        ports:
          - "27017:27017"
    steps:
      - name: Post a User
        run: |
          curl -X POST http://localhost:3001/api/users --header 'Content-Type: application/json' -d '{\"username\": "\hello",\"address": \"dwded"}'
      - name: Get Users 
        run: curl http://localhost:3001/api/users
    
      - name:  Log Node Version
        run: |
          node -v
          cat /etc/os-release
          pwd
          whoami